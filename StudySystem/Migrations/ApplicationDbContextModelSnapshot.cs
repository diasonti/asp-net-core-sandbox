// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudySystem.Data;

namespace StudySystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("StudySystem.Models.Class", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("CourseId")
                        .IsRequired()
                        .HasColumnName("course_id");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnName("topic")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("class");
                });

            modelBuilder.Entity("StudySystem.Models.Course", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("course");
                });

            modelBuilder.Entity("StudySystem.Models.IndividualTask", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("ClassId")
                        .IsRequired()
                        .HasColumnName("class_id");

                    b.Property<long?>("StudentId")
                        .IsRequired()
                        .HasColumnName("student_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnName("text")
                        .HasMaxLength(10000);

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("individual_task");
                });

            modelBuilder.Entity("StudySystem.Models.IndividualTaskGrade", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Grade")
                        .HasColumnName("grade");

                    b.Property<long>("TaskId")
                        .HasColumnName("task_id");

                    b.HasKey("Id");

                    b.HasIndex("TaskId")
                        .IsUnique();

                    b.ToTable("individual_task_grade");
                });

            modelBuilder.Entity("StudySystem.Models.Task", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("ClassId")
                        .IsRequired()
                        .HasColumnName("class_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnName("text")
                        .HasMaxLength(10000);

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("task");
                });

            modelBuilder.Entity("StudySystem.Models.TaskGrade", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Grade")
                        .HasColumnName("grade");

                    b.Property<long?>("TaskId")
                        .IsRequired()
                        .HasColumnName("task_id");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("task_grade");
                });

            modelBuilder.Entity("StudySystem.Models.UserAccount", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Password")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("user_account");
                });

            modelBuilder.Entity("StudySystem.Models.UserAccountToCourseLink", b =>
                {
                    b.Property<long>("UserAccountId")
                        .HasColumnName("user_account_id");

                    b.Property<long>("CourseId")
                        .HasColumnName("course_id");

                    b.HasKey("UserAccountId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("user_account_to_course_link");
                });

            modelBuilder.Entity("StudySystem.Models.Class", b =>
                {
                    b.HasOne("StudySystem.Models.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudySystem.Models.IndividualTask", b =>
                {
                    b.HasOne("StudySystem.Models.Class", "Class")
                        .WithMany("IndividualTasks")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudySystem.Models.Class", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudySystem.Models.IndividualTaskGrade", b =>
                {
                    b.HasOne("StudySystem.Models.IndividualTask", "Task")
                        .WithOne("Grade")
                        .HasForeignKey("StudySystem.Models.IndividualTaskGrade", "TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudySystem.Models.Task", b =>
                {
                    b.HasOne("StudySystem.Models.Class", "Class")
                        .WithMany("Tasks")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudySystem.Models.TaskGrade", b =>
                {
                    b.HasOne("StudySystem.Models.Task", "Task")
                        .WithMany("Grades")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudySystem.Models.UserAccountToCourseLink", b =>
                {
                    b.HasOne("StudySystem.Models.Course", "Course")
                        .WithMany("StudentLinks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudySystem.Models.UserAccount", "UserAccount")
                        .WithMany("CourseLinks")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
